#BlueJ class context
comment0.target=Segmento
comment0.text=\r\n\ Una\ segmento\ que\ puede\ ser\ manipulado.\r\n
comment1.params=x1\ x2\ y1\ y2\ tamano
comment1.target=Segmento(float,\ float,\ float,\ float,\ float)
comment1.text=\r\n\ Constructor\ de\ objetos\ de\ la\ clase\ Segmento.\r\n
comment10.params=cordSeg
comment10.target=boolean\ checkInterseccion(float[])
comment10.text=\r\n\ Obtiene\ si\ se\ interseca\ o\ no\ con\ otra\ linea.\r\n\ @param\ cordSeg,\ coordenadas\ del\ segmento\ a\ probar\r\n\ @return\ valor,\ si\ se\ intersecan\ o\ no\r\n
comment11.params=x1\ x2\ y1\ y2
comment11.target=void\ informacion(float,\ float,\ float,\ float)
comment11.text=\r\n\ Calcula\ la\ informacion\ de\ la\ recta\ asocioada\ a\ la\ segmento.\r\n
comment12.params=
comment12.target=java.awt.geom.Line2D.Double\ getBounds()
comment12.text=\r\n\ Hace\ un\ rectangulo2D\ alrededor\ del\ segmento.\r\n
comment13.params=
comment13.target=void\ draw()
comment13.text=\r\n\ Dibuja\ al\ segmento.\r\n
comment2.params=
comment2.target=boolean\ getVisible()
comment2.text=\r\n\ @return\ inVisible,\ retorna\ si\ es\ visible\ o\ no\ el\ segmento\r\n
comment3.params=
comment3.target=float[]\ getCoordenada()
comment3.text=\r\n\ Obtiene\ las\ coordenada\ de\ los\ puntos\ de\ inicio\ del\ segmento.\r\n\ @return\ dato,\ la\ coordenada\ con\ la\ menor\ x\ del\ segmento\r\n
comment4.params=
comment4.target=float[]\ getCoordenadasReales()
comment4.text=\r\n\ Obtiene\ las\ coordenadas\ de\ los\ puntos\ que\ hacen\ el\ segmento.\r\n\ @return\ coordenadas,\ las\ coordenadas\ en\ el\ canvas\r\n
comment5.params=
comment5.target=int[]\ getCoordenadasPlano()
comment5.text=\r\n\ Obtiene\ las\ coordenadas\ en\ el\ plano\ del\ segmento.\r\n\ @return\ coordenadasPlano,\ las\ coordenadas\ del\ segmento\ como\ se\ manejan\ en\ el\ plano\r\n
comment6.params=seg
comment6.target=boolean\ contains(Segmento)
comment6.text=\r\n\ Obtiene\ si\ el\ segmento\ contiene\ las\ coordenadas\ x\ de\ otro.\r\n\ @return\ valor,\ si\ contiene\ o\ no\ las\ coordenadas\ x\ de\ otro\r\n
comment7.params=seg
comment7.target=boolean\ intersecta(Segmento)
comment7.text=\r\n\ Mira\ si\ el\ segmento\ interseca\ a\ otro\ segmento.\r\n\ @param\ seg,\ segmento\ a\ mirar\ interseccion\r\n\ @return\ valor,\ si\ se\ intersecan\ en\ algun\ punto\r\n
comment8.params=
comment8.target=float[]\ getInfo()
comment8.text=\r\n\ Obtiene\ la\ informacion\ de\ la\ recta\ asociada\ a\ la\ segmento\ .\r\n\ @return\ info,\ array\ de\ floats\ de\ 2\ elementos\ pendiente\ de\ la\ segmento,\ corte\ con\ el\ eje\ y\r\n
comment9.params=
comment9.target=java.awt.geom.Line2D\ getSegmento()
comment9.text=\r\n\ Obtiene\ el\ objeto\ Line2D\ que\ representa\ al\ segmento.\r\n\ @return\ segmento,\ objeto\ que\ representa\ al\ segmento\r\n
numComments=14
